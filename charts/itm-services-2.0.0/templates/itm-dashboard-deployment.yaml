# Copyright 2022 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.itm_dashboard.name }}
  labels:
    app: {{ .Values.images.itm_dashboard }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.itm_dashboard.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.itm_dashboard.name }}
        role: itm
    spec:
      containers:
      - name: {{ .Values.itm_dashboard.name }}
        image: {{ .Values.images.registry }}{{ .Values.images.itm_dashboard }}:{{ .Values.images.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        resources:
          limits:
            memory: "256Mi"
            cpu: "500m"
        env:
          - name: LOCAL_HOST
            value: "{{ .Values.flask_ip }}"
          - name: HOST_IP
            value: {{ .Values.host_ip }}
          - name: NAMESPACE
            value: {{ .Values.namespace }}
          - name: SERVER_PORT
            value: "{{ .Values.itm_dashboard.service.nodePort }}"
          - name: LOCAL_PORT
            value: "{{ .Values.itm_dashboard.service.port }}"
          - name: GRAFANA_PASSWORD
            value: {{ .Values.grafana.password }}
          - name: GRAFANA_HOST
            value: {{ .Values.grafana.ip }}
          - name: PSQL_USER
            value: "postgres"
          - name: PSQL_PASS
            value: {{ .Values.postgresql.postgresqlPassword }}
          - name: PY_LOG_LEVEL
            value: "{{ .Values.py_log_level }}"
        securityContext:
          readOnlyRootFilesystem: true
#      nodeSelector:
#        node-role.kubernetes.io/master: ""
#      tolerations:
#        - key: "node-role.kubernetes.io/master"
#          operator: "Exists"
#          effect: "NoSchedule"
