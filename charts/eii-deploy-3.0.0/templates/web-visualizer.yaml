# Copyright (c) 2021 Intel Corporation.

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.config.web_visualizer.name }}
  namespace: {{ .Values.namespace }}
spec:
  type: NodePort
  selector:
    app: webvisualizer
  ports:
    - name: https
      port: {{ .Values.config.web_visualizer.int.https_port }}
      targetPort: {{ .Values.config.web_visualizer.int.https_port }}
      nodePort: {{ .Values.config.web_visualizer.ext.https_port }}
    - name: http
      port: {{ .Values.config.web_visualizer.int.http_port }}
      targetPort: {{ .Values.config.web_visualizer.int.http_port }}
      nodePort: {{ .Values.config.web_visualizer.ext.http_port }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: webvisualizer
  name: deployment-webvisualizer
  namespace: {{ .Values.namespace }}

spec:
  replicas: 1
  selector:
    matchLabels:
      app: webvisualizer
  template:
    metadata:
      labels:
        app: webvisualizer
    spec:
      nodeSelector:
        feature.node.kubernetes.io/system-os_release.ID: "ubuntu"
      {{- if and .Values.DOCKER_USERNAME .Values.DOCKER_PASSWORD }}
      imagePullSecrets:
      - name: registryauth
      {{- end }}
      containers:
      - name: ia-web-visualizer
        image: {{ .Values.DOCKER_REGISTRY }}openedgeinsights/ia_web_visualizer:{{ .Values.EII_VERSION }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        volumeMounts:
        {{- if eq .Values.config.web_visualizer.IPC true}}
        - name: {{ .Values.volumes.eii_socket.name }}
          mountPath: {{ .Values.volumes.eii_socket.location }}
        {{- end }}
        {{ if eq .Values.env.DEV_MODE false}}
        - name: etcd-certs
          mountPath: /run/secrets/etcd/
        {{ end }}

        env:
        - name: AppName
          value: "WebVisualizer"
        - name: DEV_MODE
          value: '{{ .Values.env.DEV_MODE }}'
        - name: PROFILING_MODE
          value: '{{ .Values.env.PROFILING_MODE }}'
        - name: WEBVISUALIZER_USERNAME
          value: '{{ .Values.env.WEBVISUALIZER_USERNAME }}'
        - name: WEBVISUALIZER_PASSWORD
          value: '{{ .Values.env.WEBVISUALIZER_PASSWORD }}'
        - name: ETCD_HOST
          value: {{ .Values.config.etcd.name }}
        - name: ETCD_CLIENT_PORT
          value: '{{ .Values.config.etcd.client_port }}'
        - name: ETCD_PREFIX
          value: ''
        {{- $global := . -}}
        {{- range $instance_idx := until (int .Values.num_video_instances) -}}
        {{- $instance := "" }}
        {{- $subscriber_port := "" }}
        {{- if eq (int $global.Values.num_video_instances) 1 }}
        {{- $subscriber_port = $global.Values.config.video_analytics.publish_port }}
        {{- $instance = "" }}
        {{- end }}
        {{- if gt (int $global.Values.num_video_instances) 1 }}
        {{- $subscriber_port = add $global.Values.config.video_analytics.publish_port  $instance_idx }}
        {{- $instance = add 1 $instance_idx }}
        {{- end }}
        {{- if eq $global.Values.config.web_visualizer.IPC false}}
        - name: SUBSCRIBER_default{{ $instance }}_ENDPOINT
          value: "{{ $global.Values.config.video_analytics.name }}{{ $instance }}:{{ $subscriber_port }}"
        - name: SUBSCRIBER_default{{ $instance }}_TYPE
          value: "zmq_tcp"
        {{- else }}
        - name: SUBSCRIBER_default{{ $instance }}_ENDPOINT
          value: "{{ $global.Values.env.SOCKET_DIR }}"
        - name: SUBSCRIBER_default{{ $instance }}_TYPE
          value: "zmq_ipc"
        {{- end }}
        {{- end }}
        {{ if eq .Values.env.DEV_MODE false}}
        - name: CONFIGMGR_CACERT
          value: "/run/secrets/etcd/cacert.pem"
        - name: CONFIGMGR_CERT
          value: "/run/secrets/etcd/WebVisualizer_client_certificate.pem"
        - name: CONFIGMGR_KEY
          value: "/run/secrets/etcd/WebVisualizer_client_key.pem"
        {{ end }}


      volumes:
      {{- if eq .Values.config.web_visualizer.IPC true}}
      - name: {{ .Values.volumes.eii_socket.name }}
        persistentVolumeClaim:
          claimName: {{ .Values.volumes.eii_socket.name }}
      {{- end }}
      {{ if eq .Values.env.DEV_MODE false}}
      - name: etcd-certs
        secret:
          secretName: eii-certs
          items:
          - key: cacert.pem
            path: cacert.pem
          - key: WebVisualizer_client_certificate.pem
            path: WebVisualizer_client_certificate.pem
          - key: WebVisualizer_client_key.pem
            path: WebVisualizer_client_key.pem
      {{ end }}
