# INTEL CONFIDENTIAL
#
# Copyright (C) 2022 Intel Corporation.
#
# This software and the related documents are Intel copyrighted materials, and your use of
# them is governed by the express license under which they were provided to you (License).
# Unless the License provides otherwise, you may not use, modify, copy, publish, distribute,
# disclose or transmit this software or the related documents without Intel's prior written permission.
#
# This software and the related documents are provided as is, with no express or implied warranties,
# other than those that are expressly stated in the License.

---
# Default values for search-image-by-image.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: 10.67.108.226/hce/spark
  tag: 1.2.2
  type: NodePort
  port: 8080
  pullPolicy: IfNotPresent

service:
  port: 8080
  type: NodePort
  NodePort: 32088

global:
  namespace:
    create: false
    value: spark-cluster
    istioInjection:
      create: false

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

configMap:
  name: "spark-cluster-cm"
  sqlDB:
    addr: evi-postgresql.smartedge-apps
    port: 5432
  hdfs:
    addr: "evi-hbase-hadoop-hdfs-nn.smartedge-apps"
    port: "9000"
    user: "root"
    archivePath: "/greenplum/vehicle_archive/"
    
podSecurityContext: {}
  # fsGroup: 2000

volumes:
  name: spark-cluster-secret-volume
  readOnly: true
  mountPath: "/opt/psqlauth"

secret:
  secretName: spark-cluster-secret
  # secret.auth (required) Authentication configs for spark-cluster (base64 encoded)
  auth:
    password: ""

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

