# INTEL CONFIDENTIAL
#
# Copyright (C) 2022-2023 Intel Corporation.
#
# This software and the related documents are Intel copyrighted materials, and your use of
# them is governed by the express license under which they were provided to you (License).
# Unless the License provides otherwise, you may not use, modify, copy, publish, distribute,
# disclose or transmit this software or the related documents without Intel's prior written permission.
#
# This software and the related documents are provided as is, with no express or implied warranties,
# other than those that are expressly stated in the License.

---
{{- if .Values.global.namespace.create -}}
apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.global.namespace.value }}
{{ if .Values.global.namespace.istioInjection.create }}
  labels:
    istio-injection: enabled
{{ end }}
{{- end -}}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.global.deployment.name }}
  namespace: {{ .Values.global.namespace.value }}
  annotations:
    container.apparmor.security.beta.kubernetes.io/ai-inference: runtime/default
spec:
  selector:
    matchLabels:
      app: ai-inference
      version: v1
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: ai-inference
        sidecar.istio.io/inject: "{{ .Values.istioInjection }}"
        version: v1
    spec:
      nodeSelector:
        feature.node.kubernetes.io/cpu-cpuid.AVX512VNNI: 'true'
        feature.node.kubernetes.io/cpu-cpuid.AVX2: 'true'
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: {{ .Values.global.service.name }}
      # tolerations:
      # - key: "node"
      #   operator: "Equal"
      #   value: "hddl"
      #   effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - ai-inference
              topologyKey: kubernetes.io/hostname
      containers:
      - name: {{ .Values.global.deployment.name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.Version }}"
        command: ["/opt/run_service.sh"]
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          # readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
        env:
        - name: FeatureStorage_HBaseVehicleFeatureServerAddress
          value: "{{ .Values.configMap.hbaseStorage.hbaseAddr }}"
        - name: FeatureStorage_HBaseVehicleFeatureServerPort
          value: "{{ .Values.configMap.hbaseStorage.hbasePort }}"
        - name: FeatureStorage_RestControllerBaseUrl
          value: "{{ .Values.configMap.hbaseStorage.storageRestAddress }}:{{ .Values.configMap.hbaseStorage.storageRestPort }}"
        livenessProbe:
          httpGet:
            path: /healthz
            port:  {{ .Values.image.restfulPort }}
          initialDelaySeconds: 120
          periodSeconds: 60
        startupProbe:
          httpGet:
            path: /healthz
            port:  {{ .Values.image.restfulPort }}
          failureThreshold: 5
          periodSeconds: 60
        volumeMounts:
        - mountPath: /dev/dri/card0
          name: dri
        ports:
        - containerPort: {{ .Values.image.restfulPort }}
          name: restful
        - containerPort: {{ .Values.image.grpcPort }}
          name: grpc
        volumeMounts:
        - mountPath: /opt/hce-core/middleware/ai/ai_inference/source/low_latency_server/AiInference.config
          subPath: AiInference.config
          name: config-volume
        - mountPath: /opt/hce-configs/media_storage_configmap.json
          subPath: media_storage_configmap.json
          name: config-volume-ms
        - name: media-storage-secret
          mountPath: {{ .Values.configMap.mediaStorage.secretMountPath }}
          readOnly: true
      volumes:
      - name: config-volume
        configMap:
          name: {{ .Values.configMap.AIInference.name }}
      - name: dri
        hostPath:
          path: /dev/dri/card0
      - name: config-volume-ms
        configMap:
          name: {{ .Values.configMap.mediaStorage.name }}
      - name: media-storage-secret
        secret:
          secretName: {{ .Values.global.secret.minio.name }}
          optional: true
          items:
          - key: rootUser
            path: rootUser
          - key: rootPassword
            path: rootPassword
