# INTEL CONFIDENTIAL
#
# Copyright (C) 2022 Intel Corporation.
#
# This software and the related documents are Intel copyrighted materials, and your use of
# them is governed by the express license under which they were provided to you (License).
# Unless the License provides otherwise, you may not use, modify, copy, publish, distribute,
# disclose or transmit this software or the related documents without Intel's prior written permission.
#
# This software and the related documents are provided as is, with no express or implied warranties,
# other than those that are expressly stated in the License.

---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: {{ .Values.namespace.value }}
  name: evi-realm
data:
  evi-realm.json: |
    {
        "id": "hce",
        "realm": "evi",
        "displayName": "EVI Single Sign-on",
        "notBefore": 0,
        "defaultSignatureAlgorithm": "RS384",
        "revokeRefreshToken": false,
        "refreshTokenMaxReuse": 0,
        "accessTokenLifespan": 1800,
        "accessTokenLifespanForImplicitFlow": 900,
        "ssoSessionIdleTimeout": 1800,
        "ssoSessionMaxLifespan": 36000,
        "ssoSessionIdleTimeoutRememberMe": 0,
        "ssoSessionMaxLifespanRememberMe": 0,
        "offlineSessionIdleTimeout": 2592000,
        "offlineSessionMaxLifespanEnabled": false,
        "offlineSessionMaxLifespan": 5184000,
        "clientSessionIdleTimeout": 0,
        "clientSessionMaxLifespan": 0,
        "clientOfflineSessionIdleTimeout": 0,
        "clientOfflineSessionMaxLifespan": 0,
        "accessCodeLifespan": 600,
        "accessCodeLifespanUserAction": 300,
        "accessCodeLifespanLogin": 1800,
        "actionTokenGeneratedByAdminLifespan": 43200,
        "actionTokenGeneratedByUserLifespan": 300,
        "oauth2DeviceCodeLifespan": 600,
        "oauth2DevicePollingInterval": 5,
        "enabled": true,
        "sslRequired": "external",
        "registrationAllowed": false,
        "registrationEmailAsUsername": false,
        "rememberMe": false,
        "verifyEmail": false,
        "loginWithEmailAllowed": true,
        "duplicateEmailsAllowed": false,
        "resetPasswordAllowed": false,
        "editUsernameAllowed": false,
        "bruteForceProtected": true,
        "permanentLockout": false,
        "maxFailureWaitSeconds": 900,
        "minimumQuickLoginWaitSeconds": 60,
        "waitIncrementSeconds": 60,
        "quickLoginCheckMilliSeconds": 1000,
        "maxDeltaTimeSeconds": 43200,
        "failureFactor": 30,
        "roles": {
          "realm": [
            {
              "id": "2702e7f8-2692-4566-925e-d8dd83b701dc",
              "name": "offline_access",
              "description": "${role_offline-access}",
              "composite": false,
              "clientRole": false,
              "containerId": "hce",
              "attributes": {}
            },
            {
              "id": "7a70b499-1626-4f77-aa69-96f029614907",
              "name": "uma_authorization",
              "description": "${role_uma_authorization}",
              "composite": false,
              "clientRole": false,
              "containerId": "hce",
              "attributes": {}
            },
            {
              "id": "7cbcc952-7fa0-439f-9332-8d5a62dacc34",
              "name": "default-roles-hce",
              "description": "${role_default-roles}",
              "composite": true,
              "composites": {
                "realm": [
                  "offline_access",
                  "uma_authorization"
                ],
                "client": {
                  "account": [
                    "view-profile",
                    "manage-account"
                  ]
                }
              },
              "clientRole": false,
              "containerId": "hce",
              "attributes": {}
            }
          ],
          "client": {
            "realm-management": [
              {
                "id": "732dfebf-4e8c-4d91-8a68-f1257272d92b",
                "name": "query-clients",
                "description": "${role_query-clients}",
                "composite": false,
                "clientRole": true,
                "containerId": "80739539-d3c0-4d90-ade6-4387e0893482",
                "attributes": {}
              },
              {
                "id": "6959699d-325a-42c4-8818-5b9960ccdce5",
                "name": "view-authorization",
                "description": "${role_view-authorization}",
                "composite": false,
                "clientRole": true,
                "containerId": "80739539-d3c0-4d90-ade6-4387e0893482",
                "attributes": {}
              },
              {
                "id": "ad952eff-b373-42de-a0d1-f24646bcca69",
                "name": "query-realms",
                "description": "${role_query-realms}",
                "composite": false,
                "clientRole": true,
                "containerId": "80739539-d3c0-4d90-ade6-4387e0893482",
                "attributes": {}
              },
              {
                "id": "fffd985e-0474-4cae-ac31-42de2d3be712",
                "name": "manage-users",
                "description": "${role_manage-users}",
                "composite": false,
                "clientRole": true,
                "containerId": "80739539-d3c0-4d90-ade6-4387e0893482",
                "attributes": {}
              },
              {
                "id": "2bbfa291-0a5d-490e-8213-29a4728589e6",
                "name": "manage-realm",
                "description": "${role_manage-realm}",
                "composite": false,
                "clientRole": true,
                "containerId": "80739539-d3c0-4d90-ade6-4387e0893482",
                "attributes": {}
              },
              {
                "id": "0be0be42-5b3f-42d6-b901-e010a886de72",
                "name": "view-users",
                "description": "${role_view-users}",
                "composite": true,
                "composites": {
                  "client": {
                    "realm-management": [
                      "query-users",
                      "query-groups"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "80739539-d3c0-4d90-ade6-4387e0893482",
                "attributes": {}
              },
              {
                "id": "32ec5d8c-f088-4fda-9d7f-9ee35cf5b209",
                "name": "manage-clients",
                "description": "${role_manage-clients}",
                "composite": false,
                "clientRole": true,
                "containerId": "80739539-d3c0-4d90-ade6-4387e0893482",
                "attributes": {}
              },
              {
                "id": "33fbe057-ebf2-4272-b7b0-c1e4e6fb9584",
                "name": "manage-authorization",
                "description": "${role_manage-authorization}",
                "composite": false,
                "clientRole": true,
                "containerId": "80739539-d3c0-4d90-ade6-4387e0893482",
                "attributes": {}
              },
              {
                "id": "c5972304-7afc-4ca7-aabd-e89dcc9d9704",
                "name": "manage-identity-providers",
                "description": "${role_manage-identity-providers}",
                "composite": false,
                "clientRole": true,
                "containerId": "80739539-d3c0-4d90-ade6-4387e0893482",
                "attributes": {}
              },
              {
                "id": "885bd1b8-16ab-403b-b323-edd2f22f27a9",
                "name": "view-events",
                "description": "${role_view-events}",
                "composite": false,
                "clientRole": true,
                "containerId": "80739539-d3c0-4d90-ade6-4387e0893482",
                "attributes": {}
              },
              {
                "id": "7f7063af-2143-4c73-b076-ef773dbaab7e",
                "name": "impersonation",
                "description": "${role_impersonation}",
                "composite": false,
                "clientRole": true,
                "containerId": "80739539-d3c0-4d90-ade6-4387e0893482",
                "attributes": {}
              },
              {
                "id": "7b8bdfbd-abe4-46d7-b3ff-bb2e15270707",
                "name": "query-users",
                "description": "${role_query-users}",
                "composite": false,
                "clientRole": true,
                "containerId": "80739539-d3c0-4d90-ade6-4387e0893482",
                "attributes": {}
              },
              {
                "id": "3a122cec-7c53-4cb7-8e11-2ada4a441408",
                "name": "realm-admin",
                "description": "${role_realm-admin}",
                "composite": true,
                "composites": {
                  "client": {
                    "realm-management": [
                      "query-clients",
                      "view-authorization",
                      "query-realms",
                      "manage-users",
                      "manage-realm",
                      "view-users",
                      "manage-clients",
                      "manage-authorization",
                      "manage-identity-providers",
                      "view-events",
                      "impersonation",
                      "query-users",
                      "manage-events",
                      "query-groups",
                      "view-realm",
                      "create-client",
                      "view-clients",
                      "view-identity-providers"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "80739539-d3c0-4d90-ade6-4387e0893482",
                "attributes": {}
              },
              {
                "id": "8009afc5-bcaf-4510-b800-fc63bb03ede6",
                "name": "manage-events",
                "description": "${role_manage-events}",
                "composite": false,
                "clientRole": true,
                "containerId": "80739539-d3c0-4d90-ade6-4387e0893482",
                "attributes": {}
              },
              {
                "id": "04e8c6e1-e829-46f0-a403-c486007bb59a",
                "name": "query-groups",
                "description": "${role_query-groups}",
                "composite": false,
                "clientRole": true,
                "containerId": "80739539-d3c0-4d90-ade6-4387e0893482",
                "attributes": {}
              },
              {
                "id": "f6a17f07-91e1-4f96-8b9b-c45ce1d192f8",
                "name": "view-realm",
                "description": "${role_view-realm}",
                "composite": false,
                "clientRole": true,
                "containerId": "80739539-d3c0-4d90-ade6-4387e0893482",
                "attributes": {}
              },
              {
                "id": "4391eb63-7321-4d6c-8223-f7f849ee2414",
                "name": "create-client",
                "description": "${role_create-client}",
                "composite": false,
                "clientRole": true,
                "containerId": "80739539-d3c0-4d90-ade6-4387e0893482",
                "attributes": {}
              },
              {
                "id": "c2648837-7b48-491f-83f5-972934003b8c",
                "name": "view-clients",
                "description": "${role_view-clients}",
                "composite": true,
                "composites": {
                  "client": {
                    "realm-management": [
                      "query-clients"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "80739539-d3c0-4d90-ade6-4387e0893482",
                "attributes": {}
              },
              {
                "id": "95dc2687-4f70-4652-ba05-a48ebdd44ba3",
                "name": "view-identity-providers",
                "description": "${role_view-identity-providers}",
                "composite": false,
                "clientRole": true,
                "containerId": "80739539-d3c0-4d90-ade6-4387e0893482",
                "attributes": {}
              }
            ],
            "security-admin-console": [],
            "admin-cli": [],
            "account-console": [],
            "broker": [
              {
                "id": "4bd2c8e3-8c70-4add-819a-53f52f650ff5",
                "name": "read-token",
                "description": "${role_read-token}",
                "composite": false,
                "clientRole": true,
                "containerId": "0cac0c0b-588a-46ac-9b06-8115da8715dc",
                "attributes": {}
              }
            ],
            "istio": [
              {
                "id": "b6d58653-884b-44f6-9b0e-c37c60182d89",
                "name": "hce",
                "composite": false,
                "clientRole": true,
                "containerId": "7ebe6385-31ef-4ac7-899a-7ae787a31d4b",
                "attributes": {}
              }
            ],
            "account": [
              {
                "id": "be04123c-011a-489e-bd4f-b593b6396a73",
                "name": "manage-consent",
                "description": "${role_manage-consent}",
                "composite": true,
                "composites": {
                  "client": {
                    "account": [
                      "view-consent"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "27bdc751-374f-479a-aa50-b61ea0c487a5",
                "attributes": {}
              },
              {
                "id": "a18aa75f-6eb6-4b16-bc8d-30ce8cb61fb3",
                "name": "manage-account-links",
                "description": "${role_manage-account-links}",
                "composite": false,
                "clientRole": true,
                "containerId": "27bdc751-374f-479a-aa50-b61ea0c487a5",
                "attributes": {}
              },
              {
                "id": "24643151-f464-4769-9a97-0ff0c572573d",
                "name": "view-profile",
                "description": "${role_view-profile}",
                "composite": false,
                "clientRole": true,
                "containerId": "27bdc751-374f-479a-aa50-b61ea0c487a5",
                "attributes": {}
              },
              {
                "id": "c1111ee3-07fe-4e67-8720-7a5a4563a239",
                "name": "view-consent",
                "description": "${role_view-consent}",
                "composite": false,
                "clientRole": true,
                "containerId": "27bdc751-374f-479a-aa50-b61ea0c487a5",
                "attributes": {}
              },
              {
                "id": "119ea87c-cc44-4a1c-813c-60280287d69e",
                "name": "view-groups",
                "description": "${role_view-groups}",
                "composite": false,
                "clientRole": true,
                "containerId": "27bdc751-374f-479a-aa50-b61ea0c487a5",
                "attributes": {}
              },
              {
                "id": "23076c74-331e-4695-bc11-a2cee6162875",
                "name": "view-applications",
                "description": "${role_view-applications}",
                "composite": false,
                "clientRole": true,
                "containerId": "27bdc751-374f-479a-aa50-b61ea0c487a5",
                "attributes": {}
              },
              {
                "id": "5b1b976c-8ccd-4668-a728-13224488ae63",
                "name": "delete-account",
                "description": "${role_delete-account}",
                "composite": false,
                "clientRole": true,
                "containerId": "27bdc751-374f-479a-aa50-b61ea0c487a5",
                "attributes": {}
              },
              {
                "id": "dd0806c0-8fad-4b67-8928-60cd149daea5",
                "name": "manage-account",
                "description": "${role_manage-account}",
                "composite": true,
                "composites": {
                  "client": {
                    "account": [
                      "manage-account-links"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "27bdc751-374f-479a-aa50-b61ea0c487a5",
                "attributes": {}
              }
            ]
          }
        },
        "groups": [],
        "defaultRole": {
          "id": "7cbcc952-7fa0-439f-9332-8d5a62dacc34",
          "name": "default-roles-hce",
          "description": "${role_default-roles}",
          "composite": true,
          "clientRole": false,
          "containerId": "hce"
        },
        "requiredCredentials": [
          "password"
        ],
        "otpPolicyType": "totp",
        "otpPolicyAlgorithm": "HmacSHA1",
        "otpPolicyInitialCounter": 0,
        "otpPolicyDigits": 6,
        "otpPolicyLookAheadWindow": 1,
        "otpPolicyPeriod": 30,
        "otpPolicyCodeReusable": false,
        "otpSupportedApplications": [
          "totpAppFreeOTPName",
          "totpAppGoogleName",
          "totpAppMicrosoftAuthenticatorName"
        ],
        "webAuthnPolicyRpEntityName": "keycloak",
        "webAuthnPolicySignatureAlgorithms": [
          "ES256"
        ],
        "webAuthnPolicyRpId": "",
        "webAuthnPolicyAttestationConveyancePreference": "not specified",
        "webAuthnPolicyAuthenticatorAttachment": "not specified",
        "webAuthnPolicyRequireResidentKey": "not specified",
        "webAuthnPolicyUserVerificationRequirement": "not specified",
        "webAuthnPolicyCreateTimeout": 0,
        "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
        "webAuthnPolicyAcceptableAaguids": [],
        "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
        "webAuthnPolicyPasswordlessSignatureAlgorithms": [
          "ES256"
        ],
        "webAuthnPolicyPasswordlessRpId": "",
        "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
        "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
        "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
        "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
        "webAuthnPolicyPasswordlessCreateTimeout": 0,
        "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
        "webAuthnPolicyPasswordlessAcceptableAaguids": [],
        "users" : [ {
          "id" : "c9e5ca1d-3ac5-415b-933a-910c7edee967",
          "createdTimestamp" : 1681979565141,
          "username" : "evi",
          "enabled" : true,
          "totp" : false,
          "emailVerified" : true,
          "email" : "evi@intel.com",
          "credentials" : [ {
            "id" : "f6fc9820-71ce-4a63-9d92-b42334f44758",
            "type" : "password",
            "createdDate" : 1666070055105,
            "secretData" : "{\"value\":\"vOmSk+k7oW0ebt4iq5//PZwhcl9yfUVmzQbFYkR3IMqTcOmrciYIvBfwmVDlMcRJDyafGIQy0rwyfTjIJ/n64A==\",\"salt\":\"XDGl0dRbT/XCau5OScpb3w==\",\"additionalParameters\":{}}",
            "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
          } ],
          "disableableCredentialTypes" : [ ],
          "requiredActions" : [ ],
          "realmRoles" : [ "offline_access", "uma_authorization", "default-roles-hce" ],
          "clientRoles" : {
            "istio" : [ "hce" ]
          },
          "notBefore" : 0,
          "groups" : [ ]
        } ],
        "scopeMappings": [
          {
            "clientScope": "offline_access",
            "roles": [
              "offline_access"
            ]
          }
        ],
        "clientScopeMappings": {
          "account": [
            {
              "client": "account-console",
              "roles": [
                "manage-account",
                "view-groups"
              ]
            }
          ]
        },
        "clients": [
          {
            "id": "27bdc751-374f-479a-aa50-b61ea0c487a5",
            "clientId": "account",
            "name": "${client_account}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/evi/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "6LM6d6yH2d7wmHUR4qPAzeglZK953LG4",
            "redirectUris": [
              "/realms/evi/account/*"
            ],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
              "web-origins",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "41e2efc7-f5b7-4a31-9685-f9a6a3843a16",
            "clientId": "account-console",
            "name": "${client_account-console}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/hce/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
              "/realms/hce/account/*"
            ],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "post.logout.redirect.uris": "+",
              "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
              {
                "id": "7d58981f-8753-455d-94cc-379c381828cf",
                "name": "audience resolve",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-audience-resolve-mapper",
                "consentRequired": false,
                "config": {}
              }
            ],
            "defaultClientScopes": [
              "web-origins",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "2f3ead8f-bf3a-4d4b-bc6b-e2a9b1408538",
            "clientId": "admin-cli",
            "name": "${client_admin-cli}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
              "web-origins",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "0cac0c0b-588a-46ac-9b06-8115da8715dc",
            "clientId": "broker",
            "name": "${client_broker}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "**********",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
              "web-origins",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "7ebe6385-31ef-4ac7-899a-7ae787a31d4b",
            "clientId": "istio",
            "rootUrl": "https://hce.intel.com",
            "adminUrl": "https://hce.intel.com",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "prcN5XZSU7b4NRKsF2IKRt87qKioROYX",
            "redirectUris": [
              "*"
            ],
            "webOrigins": [
              "https://hce.intel.com"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "saml.assertion.signature": "false",
              "client.secret.creation.time": "1662020977",
              "saml.force.post.binding": "false",
              "saml.multivalued.roles": "false",
              "saml.encrypt": "false",
              "post.logout.redirect.uris": "+",
              "backchannel.logout.revoke.offline.tokens": "false",
              "saml.server.signature": "false",
              "saml.server.signature.keyinfo.ext": "false",
              "exclude.session.state.from.auth.response": "false",
              "backchannel.logout.session.required": "true",
              "client_credentials.use_refresh_token": "false",
              "saml_force_name_id_format": "false",
              "saml.client.signature": "false",
              "tls.client.certificate.bound.access.tokens": "false",
              "saml.authnstatement": "false",
              "display.on.consent.screen": "false",
              "saml.onetimeuse.condition": "false"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "defaultClientScopes": [
              "web-origins",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "80739539-d3c0-4d90-ade6-4387e0893482",
            "clientId": "realm-management",
            "name": "${client_realm-management}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": true,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
              "web-origins",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "ffcd3c96-142d-40a2-bbe6-0f91c1e3bdac",
            "clientId": "security-admin-console",
            "name": "${client_security-admin-console}",
            "rootUrl": "${authAdminUrl}",
            "baseUrl": "/admin/evi/console/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
              "/admin/evi/console/*"
            ],
            "webOrigins": [
              "+"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "post.logout.redirect.uris": "+",
              "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
              {
                "id": "da39584c-c63a-40fd-8ed5-05123b39b558",
                "name": "locale",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "locale",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "locale",
                  "jsonType.label": "String"
                }
              }
            ],
            "defaultClientScopes": [
              "web-origins",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          }
        ],
        "clientScopes": [
          {
            "id": "5f845d0d-5151-4d26-8212-4f2912cf874f",
            "name": "address",
            "description": "OpenID Connect built-in scope: address",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${addressScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "540b1d0a-374e-4c1d-9413-07fddca25d8b",
                "name": "address",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-address-mapper",
                "consentRequired": false,
                "config": {
                  "user.attribute.formatted": "formatted",
                  "user.attribute.country": "country",
                  "user.attribute.postal_code": "postal_code",
                  "userinfo.token.claim": "true",
                  "user.attribute.street": "street",
                  "id.token.claim": "true",
                  "user.attribute.region": "region",
                  "access.token.claim": "true",
                  "user.attribute.locality": "locality"
                }
              }
            ]
          },
          {
            "id": "1c499553-afc1-4c28-8d3b-c932662f9327",
            "name": "role_list",
            "description": "SAML role list",
            "protocol": "saml",
            "attributes": {
              "consent.screen.text": "${samlRoleListScopeConsentText}",
              "display.on.consent.screen": "true"
            },
            "protocolMappers": [
              {
                "id": "44055d53-e898-403b-a751-d4d00d8583f6",
                "name": "role list",
                "protocol": "saml",
                "protocolMapper": "saml-role-list-mapper",
                "consentRequired": false,
                "config": {
                  "single": "false",
                  "attribute.nameformat": "Basic",
                  "attribute.name": "Role"
                }
              }
            ]
          },
          {
            "id": "fec4eced-1110-491b-86bb-7648318ea3ae",
            "name": "email",
            "description": "OpenID Connect built-in scope: email",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${emailScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "9f5c0729-4a5d-482c-ade6-0db57edf0f79",
                "name": "email",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "email",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "email",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "d0f247f6-ad64-407e-871c-d147cd3be35d",
                "name": "email verified",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "emailVerified",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "email_verified",
                  "jsonType.label": "boolean"
                }
              }
            ]
          },
          {
            "id": "9b982c04-e349-489e-ba14-a9dd8e3ce3fe",
            "name": "microprofile-jwt",
            "description": "Microprofile - JWT built-in scope",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "false"
            },
            "protocolMappers": [
              {
                "id": "25bd10c5-69d4-4db0-9d7c-f460ed6bb21c",
                "name": "groups",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-realm-role-mapper",
                "consentRequired": false,
                "config": {
                  "multivalued": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "foo",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "groups",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "f0ca7712-92af-439e-8f81-5d7643daac87",
                "name": "upn",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "username",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "upn",
                  "jsonType.label": "String"
                }
              }
            ]
          },
          {
            "id": "cb61f278-fc4e-463a-8559-0587790bcdf1",
            "name": "offline_access",
            "description": "OpenID Connect built-in scope: offline_access",
            "protocol": "openid-connect",
            "attributes": {
              "consent.screen.text": "${offlineAccessScopeConsentText}",
              "display.on.consent.screen": "true"
            }
          },
          {
            "id": "59a31f73-72a5-4167-b709-cef9d61c8471",
            "name": "acr",
            "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "false",
              "display.on.consent.screen": "false"
            },
            "protocolMappers": [
              {
                "id": "e1747d29-008c-43a3-900d-a6f58759633e",
                "name": "acr loa level",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-acr-mapper",
                "consentRequired": false,
                "config": {
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "userinfo.token.claim": "true"
                }
              }
            ]
          },
          {
            "id": "1d196d38-21a8-4ccc-8bc1-733ab8011f87",
            "name": "phone",
            "description": "OpenID Connect built-in scope: phone",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${phoneScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "ba2a2a01-6910-4931-a6d7-5c85dbb92820",
                "name": "phone number",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "phoneNumber",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "phone_number",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "ffa59bdf-a78d-485c-9821-ccb7a56aaca2",
                "name": "phone number verified",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "phoneNumberVerified",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "phone_number_verified",
                  "jsonType.label": "boolean"
                }
              }
            ]
          },
          {
            "id": "068eaf30-4d5b-4ee6-9c1f-b6495730b1e5",
            "name": "roles",
            "description": "OpenID Connect scope for add user roles to the access token",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "false",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${rolesScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "8829de72-a27f-4714-8d06-2f9bd3a282de",
                "name": "audience resolve",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-audience-resolve-mapper",
                "consentRequired": false,
                "config": {}
              },
              {
                "id": "cd7226a7-8c0d-4dba-b39e-7d32847e60e7",
                "name": "realm roles",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-realm-role-mapper",
                "consentRequired": false,
                "config": {
                  "user.attribute": "foo",
                  "access.token.claim": "true",
                  "claim.name": "realm_access.roles",
                  "jsonType.label": "String",
                  "multivalued": "true"
                }
              },
              {
                "id": "ad00e59c-c237-4010-8e20-377755b46077",
                "name": "client roles",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-client-role-mapper",
                "consentRequired": false,
                "config": {
                  "user.attribute": "foo",
                  "access.token.claim": "true",
                  "claim.name": "resource_access.${client_id}.roles",
                  "jsonType.label": "String",
                  "multivalued": "true"
                }
              }
            ]
          },
          {
            "id": "0f4d9df9-b288-49ae-87c1-d5daa3c5e7e3",
            "name": "web-origins",
            "description": "OpenID Connect scope for add allowed web origins to the access token",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "false",
              "display.on.consent.screen": "false",
              "consent.screen.text": ""
            },
            "protocolMappers": [
              {
                "id": "32048979-9e0f-4925-8f47-16562405f606",
                "name": "allowed web origins",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-allowed-origins-mapper",
                "consentRequired": false,
                "config": {}
              }
            ]
          },
          {
            "id": "570a372c-0262-4c1c-a6fc-41ea2e575e1c",
            "name": "profile",
            "description": "OpenID Connect built-in scope: profile",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${profileScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "67c91eb5-f725-4f6b-a202-2cd2a4eb361b",
                "name": "given name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "firstName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "given_name",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "651a6d85-b13a-41df-827a-5ff7b52ac917",
                "name": "nickname",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "nickname",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "nickname",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "8cde5156-8514-4e36-b258-6236e3460b1c",
                "name": "website",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "website",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "website",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "48a804cc-43d8-4e5a-8e07-df336066cca3",
                "name": "birthdate",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "birthdate",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "birthdate",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "abac31ab-765f-4485-836a-7ae25bea91b6",
                "name": "locale",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "locale",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "locale",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "989ca0b1-1a17-43e6-96b8-7457d4d7c27c",
                "name": "picture",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "picture",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "picture",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "e5e9cf34-c2e3-4f8e-b6a2-ef02bfcdcd21",
                "name": "middle name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "middleName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "middle_name",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "67485b44-3152-401e-aa07-27f876a3af93",
                "name": "full name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-full-name-mapper",
                "consentRequired": false,
                "config": {
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "userinfo.token.claim": "true"
                }
              },
              {
                "id": "07e567e2-a603-4dfa-b3f1-169dc9e78d5f",
                "name": "profile",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "profile",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "profile",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "378d3bcb-e318-4961-b392-6621ad5659aa",
                "name": "zoneinfo",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "zoneinfo",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "zoneinfo",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "d496504f-e228-4693-bb1a-d9adb8264d80",
                "name": "updated at",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "updatedAt",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "updated_at",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "04221454-3a3a-46b5-8a73-cd6cf5b0e28a",
                "name": "username",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "username",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "preferred_username",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "f623ed01-f055-441a-8026-833dfcf18cea",
                "name": "gender",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "gender",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "gender",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "7e90f502-32a4-4c0a-b57a-108b3547ed6f",
                "name": "family name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "lastName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "family_name",
                  "jsonType.label": "String"
                }
              }
            ]
          }
        ],
        "defaultDefaultClientScopes": [
          "role_list",
          "profile",
          "email",
          "roles",
          "web-origins",
          "acr"
        ],
        "defaultOptionalClientScopes": [
          "offline_access",
          "address",
          "phone",
          "microprofile-jwt"
        ],
        "browserSecurityHeaders": {
          "contentSecurityPolicyReportOnly": "",
          "xContentTypeOptions": "nosniff",
          "xRobotsTag": "none",
          "xFrameOptions": "SAMEORIGIN",
          "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
          "xXSSProtection": "1; mode=block",
          "strictTransportSecurity": "max-age=31536000; includeSubDomains"
        },
        "smtpServer": {},
        "eventsEnabled": false,
        "eventsListeners": [
          "jboss-logging"
        ],
        "enabledEventTypes": [],
        "adminEventsEnabled": false,
        "adminEventsDetailsEnabled": false,
        "identityProviders": [],
        "identityProviderMappers": [],
        "components": {
          "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
            {
              "id": "5a7114a7-54d2-4c58-8524-f0689664b5e3",
              "name": "Consent Required",
              "providerId": "consent-required",
              "subType": "anonymous",
              "subComponents": {},
              "config": {}
            },
            {
              "id": "8e7c23b8-198c-4568-9cdf-2c3c3305ab41",
              "name": "Full Scope Disabled",
              "providerId": "scope",
              "subType": "anonymous",
              "subComponents": {},
              "config": {}
            },
            {
              "id": "ea571978-a7aa-4bd2-b48e-1b7404cb5d5f",
              "name": "Max Clients Limit",
              "providerId": "max-clients",
              "subType": "anonymous",
              "subComponents": {},
              "config": {
                "max-clients": [
                  "200"
                ]
              }
            },
            {
              "id": "7cf7f28e-b4f5-42a9-a4f0-74980adcec95",
              "name": "Allowed Protocol Mapper Types",
              "providerId": "allowed-protocol-mappers",
              "subType": "authenticated",
              "subComponents": {},
              "config": {
                "allowed-protocol-mapper-types": [
                  "oidc-full-name-mapper",
                  "saml-role-list-mapper",
                  "saml-user-attribute-mapper",
                  "oidc-address-mapper",
                  "oidc-sha256-pairwise-sub-mapper",
                  "oidc-usermodel-attribute-mapper",
                  "oidc-usermodel-property-mapper",
                  "saml-user-property-mapper"
                ]
              }
            },
            {
              "id": "b206c715-ea40-4c16-8121-0d2e6b43ef43",
              "name": "Allowed Client Scopes",
              "providerId": "allowed-client-templates",
              "subType": "anonymous",
              "subComponents": {},
              "config": {
                "allow-default-scopes": [
                  "true"
                ]
              }
            },
            {
              "id": "9f1fb439-d8d7-4f83-b43f-5301592dbbde",
              "name": "Allowed Client Scopes",
              "providerId": "allowed-client-templates",
              "subType": "authenticated",
              "subComponents": {},
              "config": {
                "allow-default-scopes": [
                  "true"
                ]
              }
            },
            {
              "id": "d45d8773-754a-4c2b-bed5-9a7c90e6af5c",
              "name": "Trusted Hosts",
              "providerId": "trusted-hosts",
              "subType": "anonymous",
              "subComponents": {},
              "config": {
                "host-sending-registration-request-must-match": [
                  "true"
                ],
                "client-uris-must-match": [
                  "true"
                ]
              }
            },
            {
              "id": "66119de3-d87b-47a0-87bf-f3afdb0f254a",
              "name": "Allowed Protocol Mapper Types",
              "providerId": "allowed-protocol-mappers",
              "subType": "anonymous",
              "subComponents": {},
              "config": {
                "allowed-protocol-mapper-types": [
                  "oidc-sha256-pairwise-sub-mapper",
                  "oidc-usermodel-attribute-mapper",
                  "saml-user-attribute-mapper",
                  "oidc-usermodel-property-mapper",
                  "oidc-full-name-mapper",
                  "saml-user-property-mapper",
                  "oidc-address-mapper",
                  "saml-role-list-mapper"
                ]
              }
            }
          ],
          "org.keycloak.userprofile.UserProfileProvider": [
            {
              "id": "b86b8ee1-39d1-48b9-bad3-19b3fa02c7f6",
              "providerId": "declarative-user-profile",
              "subComponents": {},
              "config": {}
            }
          ],
          "org.keycloak.keys.KeyProvider": [
            {
              "id": "9b8b7941-0dd1-4c50-abc4-cb40d1d3a312",
              "name": "aes-generated",
              "providerId": "aes-generated",
              "subComponents": {},
              "config": {
                "priority": [
                  "100"
                ]
              }
            },
            {
              "id": "a8824a87-5c93-412d-81af-a97e1a2e045f",
              "name": "rsa-enc-generated",
              "providerId": "rsa-enc-generated",
              "subComponents": {},
              "config": {
                "priority": [
                  "100"
                ],
                "algorithm": [
                  "RSA-OAEP"
                ]
              }
            },
            {
              "id": "628c5f4b-d592-4006-99f7-fa449599e68b",
              "name": "hmac-generated",
              "providerId": "hmac-generated",
              "subComponents": {},
              "config": {
                "priority": [
                  "100"
                ],
                "algorithm": [
                  "HS256"
                ]
              }
            },
            {
              "id": "45394d49-e79e-4207-885f-5d3e80d90fa9",
              "name": "rsa-generated",
              "providerId": "rsa-generated",
              "subComponents": {},
              "config": {
                "priority": [
                  "100"
                ]
              }
            },
            {
              "id": "3bef2799-bd5f-45fe-a6d0-6bfa012b85e2",
              "name": "fallback-RS384",
              "providerId": "rsa-generated",
              "subComponents": {},
              "config": {
                "priority": [
                  "-100"
                ],
                "algorithm": [
                  "RS384"
                ]
              }
            }
          ]
        },
        "internationalizationEnabled": false,
        "supportedLocales": [],
        "authenticationFlows": [
          {
            "id": "11ba9462-73a2-42b9-928a-ee669138ffd5",
            "alias": "Account verification options",
            "description": "Method with which to verity the existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "idp-email-verification",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "ALTERNATIVE",
                "priority": 20,
                "autheticatorFlow": true,
                "flowAlias": "Verify Existing Account by Re-authentication",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "8bc78c36-8adc-42f2-9ee6-ea7a7ec0de1d",
            "alias": "Authentication Options",
            "description": "Authentication options.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "basic-auth",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "basic-auth-otp",
                "authenticatorFlow": false,
                "requirement": "DISABLED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "auth-spnego",
                "authenticatorFlow": false,
                "requirement": "DISABLED",
                "priority": 30,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "cfbc2313-fc39-47d3-9e26-079d1b8393cb",
            "alias": "Browser - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "auth-otp-form",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "5ed96c7e-ff08-4e36-ba13-b6a9e0c57292",
            "alias": "Direct Grant - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "direct-grant-validate-otp",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "7cb0bc3b-aded-42d4-8e79-9c131c0c2f7a",
            "alias": "First broker login - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "auth-otp-form",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "04375a69-6394-4c6d-b6d1-6fad1ec17d81",
            "alias": "Handle Existing Account",
            "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "idp-confirm-link",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": true,
                "flowAlias": "Account verification options",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "d37496b2-253d-4dfd-a2c5-edcaaafe646a",
            "alias": "Reset - Conditional OTP",
            "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "reset-otp",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "bfa90bfe-49af-424f-85ec-db0fa4fd517a",
            "alias": "User creation or linking",
            "description": "Flow for the existing/non-existing user alternatives",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticatorConfig": "create unique user config",
                "authenticator": "idp-create-user-if-unique",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "ALTERNATIVE",
                "priority": 20,
                "autheticatorFlow": true,
                "flowAlias": "Handle Existing Account",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "19e66f46-9e00-4877-acb9-ad25c7d043a4",
            "alias": "Verify Existing Account by Re-authentication",
            "description": "Reauthentication of existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "idp-username-password-form",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "CONDITIONAL",
                "priority": 20,
                "autheticatorFlow": true,
                "flowAlias": "First broker login - Conditional OTP",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "f694d549-dc66-4045-b59b-6654ed838b5f",
            "alias": "browser",
            "description": "browser based authentication",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "auth-cookie",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "auth-spnego",
                "authenticatorFlow": false,
                "requirement": "DISABLED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "identity-provider-redirector",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 25,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "ALTERNATIVE",
                "priority": 30,
                "autheticatorFlow": true,
                "flowAlias": "forms",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "3ace4fad-e0d6-4ad5-b3aa-59b68bdea15e",
            "alias": "clients",
            "description": "Base authentication for clients",
            "providerId": "client-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "client-secret",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "client-jwt",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "client-secret-jwt",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 30,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "client-x509",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 40,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "340dc07b-bcc4-435d-9184-41e156432ec3",
            "alias": "direct grant",
            "description": "OpenID Connect Resource Owner Grant",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "direct-grant-validate-username",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "direct-grant-validate-password",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "CONDITIONAL",
                "priority": 30,
                "autheticatorFlow": true,
                "flowAlias": "Direct Grant - Conditional OTP",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "31f74661-424f-4282-a846-786340d53460",
            "alias": "docker auth",
            "description": "Used by Docker clients to authenticate against the IDP",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "docker-http-basic-authenticator",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "b2d72ddf-8274-4c59-8d65-b89cd86df2fe",
            "alias": "first broker login",
            "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticatorConfig": "review profile config",
                "authenticator": "idp-review-profile",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": true,
                "flowAlias": "User creation or linking",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "b3951af8-c4a1-47c1-ac78-79f04403bf4a",
            "alias": "forms",
            "description": "Username, password, otp and other auth forms.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "auth-username-password-form",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "CONDITIONAL",
                "priority": 20,
                "autheticatorFlow": true,
                "flowAlias": "Browser - Conditional OTP",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "cfdb36ba-7258-45f7-9880-b47381959408",
            "alias": "http challenge",
            "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "no-cookie-redirect",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": true,
                "flowAlias": "Authentication Options",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "cb5f7f04-ec60-47f9-9964-2da16183f948",
            "alias": "registration",
            "description": "registration flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "registration-page-form",
                "authenticatorFlow": true,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": true,
                "flowAlias": "registration form",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "3b0b7847-0658-434e-a5e3-790e3d0fd775",
            "alias": "registration form",
            "description": "registration form",
            "providerId": "form-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "registration-user-creation",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "registration-profile-action",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 40,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "registration-password-action",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 50,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "registration-recaptcha-action",
                "authenticatorFlow": false,
                "requirement": "DISABLED",
                "priority": 60,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "7f65d1d3-0722-426b-baff-930dc9abbe35",
            "alias": "reset credentials",
            "description": "Reset credentials for a user if they forgot their password or something",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "reset-credentials-choose-user",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "reset-credential-email",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "reset-password",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 30,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "CONDITIONAL",
                "priority": 40,
                "autheticatorFlow": true,
                "flowAlias": "Reset - Conditional OTP",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "47bdcf76-4a79-49d5-bb7f-d60dda9c6b97",
            "alias": "saml ecp",
            "description": "SAML ECP Profile Authentication Flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "http-basic-authenticator",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          }
        ],
        "authenticatorConfig": [
          {
            "id": "80c5752b-5e1c-4f82-b65f-5ecd21e0b433",
            "alias": "create unique user config",
            "config": {
              "require.password.update.after.registration": "false"
            }
          },
          {
            "id": "777312fa-2316-4202-ae19-928a26efc56c",
            "alias": "review profile config",
            "config": {
              "update.profile.on.first.login": "missing"
            }
          }
        ],
        "requiredActions": [
          {
            "alias": "CONFIGURE_TOTP",
            "name": "Configure OTP",
            "providerId": "CONFIGURE_TOTP",
            "enabled": true,
            "defaultAction": false,
            "priority": 10,
            "config": {}
          },
          {
            "alias": "TERMS_AND_CONDITIONS",
            "name": "Terms and Conditions",
            "providerId": "TERMS_AND_CONDITIONS",
            "enabled": false,
            "defaultAction": false,
            "priority": 20,
            "config": {}
          },
          {
            "alias": "UPDATE_PASSWORD",
            "name": "Update Password",
            "providerId": "UPDATE_PASSWORD",
            "enabled": true,
            "defaultAction": false,
            "priority": 30,
            "config": {}
          },
          {
            "alias": "UPDATE_PROFILE",
            "name": "Update Profile",
            "providerId": "UPDATE_PROFILE",
            "enabled": true,
            "defaultAction": false,
            "priority": 40,
            "config": {}
          },
          {
            "alias": "VERIFY_EMAIL",
            "name": "Verify Email",
            "providerId": "VERIFY_EMAIL",
            "enabled": true,
            "defaultAction": false,
            "priority": 50,
            "config": {}
          },
          {
            "alias": "delete_account",
            "name": "Delete Account",
            "providerId": "delete_account",
            "enabled": false,
            "defaultAction": false,
            "priority": 60,
            "config": {}
          },
          {
            "alias": "update_user_locale",
            "name": "Update User Locale",
            "providerId": "update_user_locale",
            "enabled": true,
            "defaultAction": false,
            "priority": 1000,
            "config": {}
          }
        ],
        "browserFlow": "browser",
        "registrationFlow": "registration",
        "directGrantFlow": "direct grant",
        "resetCredentialsFlow": "reset credentials",
        "clientAuthenticationFlow": "clients",
        "dockerAuthenticationFlow": "docker auth",
        "attributes": {
          "cibaBackchannelTokenDeliveryMode": "poll",
          "de.adorsys.keycloak.config.import-checksum-default": "bb86040d7885d5854a54a3c2669cae00b45cff0e5f865bb34e0b72e24e31dab0",
          "clientOfflineSessionIdleTimeout": "0",
          "de.adorsys.keycloak.config.state-default-roles-client-realm-management-0": "[\"manage-clients\",\"view-identity-providers\",\"view-clients\",\"view-realm\",\"manage-users\",\"impersonation\",\"manage-events\",\"manage-identity-providers\",\"view-users\",\"manage-realm\",\"query-groups\",\"query-realms\",\"query-users\",\"realm-admin\",\"view-authorizati",
          "de.adorsys.keycloak.config.state-default-roles-client-realm-management-1": "on\",\"query-clients\",\"manage-authorization\",\"create-client\",\"view-events\"]",
          "cibaExpiresIn": "120",
          "de.adorsys.keycloak.config.state-default-roles-client-admin-cli-0": "[]",
          "de.adorsys.keycloak.config.state-default-roles-client-security-admin-console-0": "[]",
          "de.adorsys.keycloak.config.state-default-components-1": "S384\",\"rsa-enc-generated\"]",
          "de.adorsys.keycloak.config.state-default-components-0": "[\"Allowed Protocol Mapper Types\",\"Allowed Client Scopes\",\"Allowed Protocol Mapper Types\",\"Trusted Hosts\",\"Max Clients Limit\",\"Consent Required\",\"Full Scope Disabled\",\"Allowed Client Scopes\",\"aes-generated\",\"rsa-generated\",\"hmac-generated\",\"fallback-R",
          "cibaAuthRequestedUserHint": "login_hint",
          "de.adorsys.keycloak.config.state-default-roles-client-broker-0": "[\"read-token\"]",
          "clientOfflineSessionMaxLifespan": "0",
          "oauth2DevicePollingInterval": "5",
          "clientSessionIdleTimeout": "0",
          "userProfileEnabled": "false",
          "de.adorsys.keycloak.config.state-default-roles-realm-0": "[\"offline_access\",\"default-roles-hce\",\"uma_authorization\"]",
          "cibaInterval": "5",
          "realmReusableOtpCode": "false",
          "oauth2DeviceCodeLifespan": "600",
          "de.adorsys.keycloak.config.state-default-required-actions-0": "[\"CONFIGURE_TOTP\",\"terms_and_conditions\",\"UPDATE_PASSWORD\",\"UPDATE_PROFILE\",\"VERIFY_EMAIL\",\"delete_account\",\"update_user_locale\"]",
          "parRequestUriLifespan": "60",
          "clientSessionMaxLifespan": "0",
          "de.adorsys.keycloak.config.state-default-clients-0": "[\"account\",\"account-console\",\"admin-cli\",\"broker\",\"istio\",\"realm-management\",\"security-admin-console\"]",
          "de.adorsys.keycloak.config.state-default-roles-client-istio-0": "[\"hce\"]",
          "de.adorsys.keycloak.config.state-default-roles-client-account-0": "[\"delete-account\",\"view-profile\",\"manage-consent\",\"view-consent\",\"manage-account-links\",\"view-applications\",\"manage-account\"]"
        },
        "keycloakVersion": "21.0.2",
        "userManagedAccessAllowed": false,
        "clientProfiles": {
          "profiles": []
        },
        "clientPolicies": {
          "policies": []
        }
    }
