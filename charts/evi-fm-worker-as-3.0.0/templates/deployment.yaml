# INTEL CONFIDENTIAL
#
# Copyright (C) 2022-2023 Intel Corporation.
#
# This software and the related documents are Intel copyrighted materials, and your use of
# them is governed by the express license under which they were provided to you (License).
# Unless the License provides otherwise, you may not use, modify, copy, publish, distribute,
# disclose or transmit this software or the related documents without Intel's prior written permission.
#
# This software and the related documents are provided as is, with no express or implied warranties,
# other than those that are expressly stated in the License.

---
apiVersion: apps/v1
#kind: Deployment
kind: StatefulSet
metadata:
  name: {{ include "fm-worker.fullname" . }}
  namespace: {{ .Values.global.namespace.value }}
  annotations:
    container.apparmor.security.beta.kubernetes.io/evi-fm-worker-as: runtime/default
spec:
  selector:
    matchLabels:
      app: evi-fm-worker-as
  serviceName: "evi-fm-worker-as"
  replicas: {{ .Values.env.workerCount }}
  minReadySeconds: 10 # by default is 0
  podManagementPolicy: "OrderedReady"
  template:
    metadata:
      labels:
        app: evi-fm-worker-as
        sidecar.istio.io/inject: "{{ .Values.istioInjection }}"
        version: v1
    spec:
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - evi-fm-worker-as
            topologyKey: "kubernetes.io/hostname"
      serviceAccountName: evi-fm-worker-as
      containers:
      - name: evi-fm-worker-as
        image: {{ .Values.image.repository }}:{{ .Values.image.version}}
        command: ["/bin/sh"]
        args: ["-c", 'cp /opt/feature_matching_service/featurematchingservice/worker/worker.conf /opt/featurematchingservice/worker/worker-${HOSTNAME}.conf; sed -i "s/^name=MasterName.*/name=Master-as/g" /opt/featurematchingservice/worker/worker-${HOSTNAME}.conf; sed -i "s/^method=.*/method=${METHOD}/g" /opt/featurematchingservice/worker/worker-${HOSTNAME}.conf; sed -i "s/^sentinel=.*/sentinel=${{.Values.configMap.redis.redisAddr}}:${{.Values.configMap.redis.redisPort}}/g" /opt/featurematchingservice/worker/worker-${HOSTNAME}.conf; sed -i "s/^cpuSetting=.*/cpuSetting=${FM_CPU_SETTING}/g" /opt/featurematchingservice/worker/worker-${HOSTNAME}.conf; sed -i "s/^name=WorkerName.*/name=${HOSTNAME}/g" /opt/featurematchingservice/worker/worker-${HOSTNAME}.conf; sed -i "s/^cpu=.*/cpu=${FM_CORE_COUNT}/g" /opt/featurematchingservice/worker/worker-${HOSTNAME}.conf; sed -i "s/^loadFrom=.*/loadFrom=${FM_LOAD_FROM}/g" /opt/featurematchingservice/worker/worker-${HOSTNAME}.conf; sleep 3; /opt/featurematchingservice/worker/bin/fmsWorker -C /opt/featurematchingservice/worker/worker-${HOSTNAME}.conf']
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          allowPrivilegeEscalation: false
        resources:
          limits:
            cpu: "120"
            memory: 64Gi
          requests:
            cpu: 5m
            memory: 30Mi
        env:
        - name: NODE_NAME
          value: {{ include "fm-worker.fullname" . }}
        - name: FeatureStorage_HBaseVehicleFeatureServerAddress
          value: "{{ .Values.env.hbaseAddr }}"
        - name: FeatureStorage_HBaseVehicleFeatureServerPort
          value: "{{ .Values.env.hbasePort }}"
        - name: FeatureStorage_PSQL_ServerAddress
          value: "{{ .Values.env.psqlAddr }}"
        - name: FeatureStorage_PSQL_ServerPort
          value: "{{ .Values.env.psqlPort }}"
        - name: FeatureStorage_localFilePath
          value: "{{ .Values.env.localFilePath }}"
        - name: FeatureStorage_PSQL_Password
          valueFrom:
              secretKeyRef:
                  name: sqldbsecret
                  key: password
        - name: FeatureStorage_PSQL_Database
          value: "{{ .Values.env.psqlDatabase }}"
          #valueFrom:
          #  fieldRef:
          #    fieldPath: metadata.name
        - name: FM_WORKER_COUNT
          value: "{{ .Values.env.workerCount }}"
        - name: FM_CORE_COUNT
          value: "{{ .Values.env.coreCount }}"
        - name: FM_CPU_SETTING
          value: "{{ .Values.env.cpuSetting }}"
        - name: FM_LOAD_FROM
          value: "{{ .Values.env.loadFrom }}"
        - name: METHOD
          value: "{{ .Values.env.method }}"
        ports:
        - containerPort: {{ .Values.image.containerPort }}
        volumeMounts:
        - mountPath: /opt/feature_matching_service/featurematchingservice/worker/worker.conf
          subPath: worker.conf
          name: config-volume
        - mountPath: /opt/data/
          name: fmlocal
      volumes:
      - name: config-volume
        configMap:
          name: evi-fm-worker-as
      - name: fmlocal
        hostPath:
          path: /home/fmlocal/
